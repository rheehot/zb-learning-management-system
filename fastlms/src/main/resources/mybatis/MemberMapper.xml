<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zerobase.fastlms.admin.mapper.MemberMapper">

    <resultMap type="com.zerobase.fastlms.admin.dto.MemberDto" id="MemberDto">
        <result property="loginDt" column="login_dt"/>
    </resultMap>

    <sql id="selectListWhere">
        <if test="searchType != null and searchValue != null">
            <choose>
                <when test="searchType == 'userId'">
                    and user_id like concat('%', #{searchValue}, '%')
                </when>
                <when test="searchType == 'userName'">
                    and user_name like concat('%', #{searchValue}, '%')
                </when>
                <when test="searchType == 'phone'">
                    and phone like concat('%', #{searchValue}, '%')
                </when>
                <otherwise>
                    and
                    (
                    user_id like concat('%', #{searchValue}, '%')
                    or
                    user_name like concat('%', #{searchValue}, '%')
                    or
                    phone like concat('%', #{searchValue}, '%')
                    )
                </otherwise>
            </choose>
        </if>

    </sql>

    <select id="selectListCount" resultType="long">
        select count(*)
        from member
        where 1 = 1
            <include refid="selectListWhere"/>
    </select>

    <select id="selectList" resultMap="MemberDto">
        select *
        from (
            select  m.user_id, m.user_name, m.email_auth_yn, m.reg_dt, m.admin_yn, lh.login_dt
            from member m
            inner join (
                select
                user_id,
                max(login_dt) as login_dt
                from login_history
                group by user_id
            ) lh on m.user_id = lh.user_id
        ) tb
        where 1 = 1
            <include refid="selectListWhere"/>

        limit #{pageStart}, #{pageEnd}
    </select>

</mapper>
